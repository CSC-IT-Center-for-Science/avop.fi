# NameVirtualHost *:443
<VirtualHost *:443>
    ServerName {{ apache.server_name }}

    DocumentRoot /var/www/html/dist

    LogLevel warn
    SSLEngine on

    # Disable version 2 and 3 of the SSL protocol because of security flaws
    SSLProtocol all -SSLv2 -SSLv3
    # Allowed and disallowed cipher suites to counter weak ciphers (Mozilla publishes these at https://wiki.mozilla.org/Security/Server_Side_TLS)
    SSLCipherSuite ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK

    SSLCertificateFile /etc/pki/tls/certs/{{ apache.certificate }}
{% if environment_id == "prod" %}
    SSLCertificateChainFile /etc/pki/tls/certs/{{ apache.chain_certificate }}
{% endif %}  
    SSLCertificateKeyFile /etc/pki/tls/private/{{ apache.certificate_key }}
    SetEnvIf User-Agent ".*MSIE.*" \
    nokeepalive ssl-unclean-shutdown \
    downgrade-1.0 force-response-1.0

    CustomLog logs/ssl_request_log \
    "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
    
    ProxyIOBufferSize 65536

    RewriteEngine On
    RewriteRule    "^/(fi|en|sv)(.*)$"  "/index.html"
   
    # Shibboleth config
    <Location />
        AuthType shibboleth
        Require shibboleth
    </Location>
    
    <Location /api>
{% if environment_id == "dev" %}
        ProxyPass        http://{{ apache.appserver }}:3000/api
        ProxyPassReverse http://{{ apache.appserver }}:3000/api
{% else %}
        ProxyPass        ajp://{{ apache.appserver }}:8009/api
        ProxyPassReverse ajp://{{ apache.appserver }}:8009/api
{% endif %}

        AuthType shibboleth
        ShibRequireSession On
{% if environment_id == "dev" %}
        ShibUseHeaders On
{% endif %}
        require valid-user
    </Location>
    
</VirtualHost>

# Redirect http to https
<VirtualHost *:80>
    ServerName {{ apache.server_name }}
    Redirect / https://{{ apache.server_name }}/
</VirtualHost>

# Redirect www to ...
<VirtualHost *:80>
    ServerName www.{{ apache.server_name }}
    Redirect / https://{{ apache.server_name }}/
</VirtualHost>
<VirtualHost *:443>
    ServerName www.{{ apache.server_name }}
    Redirect / https://{{ apache.server_name }}/
</VirtualHost>
