<SPConfig xmlns="urn:mace:shibboleth:2.0:native:sp:config"
    xmlns:conf="urn:mace:shibboleth:2.0:native:sp:config"
    xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
    xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"    
    xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
    clockSkew="180">
    <ApplicationDefaults entityID="https://{{ apache.server_name }}/Shibboleth.sso"
                         REMOTE_USER="eppn persistent-id targeted-id"
                         signing="front" encryption="true" 
{% if environment_id == "dev" %}
                        attributePrefix="shib-"
{% else %}
                        attributePrefix="AJP_"
{% endif %}>
        <Sessions lifetime="28800" timeout="3600" relayState="ss:mem"
                  checkAddress="false" handlerSSL="true" cookieProps="https">
            <SSO discoveryProtocol="SAMLDS" target="/"
{% if environment_id == "prod" %}
                discoveryURL="https://haka.funet.fi/shibboleth/WAYF">SAML2</SSO>
{% else %}
                discoveryURL="https://testsp.funet.fi/shibboleth/WAYF">SAML2</SSO>
{% endif %}
            <Logout>SAML2 Local</Logout>
            <Handler type="MetadataGenerator" Location="/Metadata" signing="false"/>
            <Handler type="Status" Location="/Status" acl="127.0.0.1 ::1"/>
            <Handler type="Session" Location="/Session" showAttributeValues="false"/>
            <Handler type="DiscoveryFeed" Location="/DiscoFeed"/>
        </Sessions>
        <Errors supportContact="root@localhost"
            helpLocation="/about.html"
            styleSheet="/shibboleth-sp/main.css"/>
{% if environment_id != "dev" %}
        <MetadataProvider type="Chaining">
            <MetadataProvider type="Folder" path="partners"/>
            <MetadataProvider type="XML" uri="{{ haka_metadata_url }}" backingFilePath="/etc/shibboleth/{{ haka_metadata_file }}" reloadInterval="7200">
                <MetadataFilter type="Signature" certificate="{{ haka_cert_file }}"/>
            </MetadataProvider>
        </MetadataProvider>
{% else %}
        <MetadataProvider type="XML" path="/etc/shibboleth/{{ haka_metadata_file }}">
        </MetadataProvider>
{% endif %}
        <AttributeExtractor type="XML" validate="true" reloadChanges="false" path="attribute-map.xml"/>
        <AttributeResolver type="Query" subjectMatch="true"/>
        <AttributeFilter type="XML" validate="true" path="attribute-policy.xml"/>
        <CredentialResolver type="File" key="{{ shibboleth_credentialresolver_key }}" certificate="{{ shibboleth_credentialresolver_certificate }}"/>
    </ApplicationDefaults>
    <SecurityPolicyProvider type="XML" validate="true" path="security-policy.xml"/>
    <ProtocolProvider type="XML" validate="true" reloadChanges="false" path="protocols.xml"/>
</SPConfig>
